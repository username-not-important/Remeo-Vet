<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RomeoVet"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="clr-namespace:RomeoVet.Controls"
        xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
        xmlns:models="clr-namespace:RomeoVet.Models"
        xmlns:viewModels="clr-namespace:RomeoVet.ViewModels"
        xmlns:anatomy="clr-namespace:RomeoVet.Models.Anatomy"
        xmlns:assisticant="clr-namespace:Assisticant;assembly=Assisticant.XAML"
        xmlns:descriptors="clr-namespace:Assisticant.Descriptors;assembly=Assisticant.XAML"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="RomeoVet.MainWindow"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignDarkForeground}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignDarkBackground}"
        FontFamily="{DynamicResource MaterialDesignFont}" 
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        Loaded="MainWindow_OnLoaded"
    Name="_Window"
        MinWidth="1280" MinHeight="720"
        Width="1280" Height="720">
    <Window.Resources>

        <HierarchicalDataTemplate DataType="{x:Type anatomy:BodyPart}"
                                  ItemsSource="{Binding Children}">

            <Grid Margin="3 2" Height="20" Background="Transparent">

                <Grid.ContextMenu>
                    <ContextMenu x:Name="_BodyPartMenu" Visibility="Collapsed">
                        <MenuItem>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Magnify" Width="16" Height="16"/>
                                    <TextBlock Text="Zoom Extends" Margin="5,0,0,0"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>

                        <MenuItem>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="CropFree" Width="16" Height="16"/>
                                    <TextBlock Text="Isolate" Margin="5,0,0,0"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Image x:Name="_BodyPartIcon" Width="15" Visibility="Collapsed"/>
                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="3,0,0,0"/>
                </StackPanel>

                <Border Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button x:Name="_BodyPartIsolate" HorizontalAlignment="Right" ToolTip="Isolate" Visibility="Collapsed"
                            Width="18" Height="18" Padding="0" Click="_BodyPartIsolate_OnClick"
                        Style="{StaticResource MaterialDesignToolButton}" Foreground="{StaticResource MaterialDesignDarkForeground}">
                        <materialDesign:PackIcon Kind="CropFree" Width="16" Height="16"/>
                    </Button>
                </Border>

            </Grid>

            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding PartType}" Value="Bone">
                    <Setter TargetName="_BodyPartIcon" Property="Source" Value="Assets/Icons/IconBone.png"/>
                    <Setter TargetName="_BodyPartIcon" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartIsolate" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartMenu" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding PartType}" Value="Organ">
                    <Setter TargetName="_BodyPartIcon" Property="Source" Value="Assets/Icons/IconOrgan.png"/>
                    <Setter TargetName="_BodyPartIcon" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartIsolate" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartMenu" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding PartType}" Value="Vein">
                    <Setter TargetName="_BodyPartIcon" Property="Source" Value="Assets/Icons/IconVein.png"/>
                    <Setter TargetName="_BodyPartIcon" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartIsolate" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartMenu" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding PartType}" Value="Nerve">
                    <Setter TargetName="_BodyPartIcon" Property="Source" Value="Assets/Icons/IconNerve.png"/>
                    <Setter TargetName="_BodyPartIcon" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartIsolate" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="_BodyPartMenu" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type anatomy:Animal}"
                                  ItemsSource="{Binding BodyParts}">
            <StackPanel Orientation="Horizontal" Margin="3 2">
                <TextBlock Text="{Binding Name}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
    </Window.Resources>
    <Grid Name="_ParentGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="IsolatedViewStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                    <VisualTransition From="Closed" GeneratedDuration="0:0:0.1" To="Open">
                        <VisualTransition.GeneratedEasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_IsolatedDisplay"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="_IsolatedDisplay">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="Maximized" GeneratedDuration="0:0:0.1" To="Closed">
                        <VisualTransition.GeneratedEasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_IsolatedDisplay">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Closed"/>
                <VisualState x:Name="Open">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="_IsolatedDisplay">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_IsolatedDisplay">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Maximized">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="_IsolatedDisplay">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_IsolatedDisplay">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="_IsolatedDisplay">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="_IsolatedDisplay">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Stretch}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <DockPanel>

            <Menu DockPanel.Dock="Top" 
                  Background="{StaticResource MaterialDesignGrayBrush}">
                <Grid>
                    <materialDesign:PackIcon Kind="Cat" Width="30" Height="30" 
                                             
                                             Background="DodgerBlue"  Foreground="FloralWhite"/>
                </Grid>
                <MenuItem Header="File"/>
                <MenuItem Header="Edit"/>
                <MenuItem Header="View"/>
                <MenuItem Header="Help"/>
            </Menu>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="300" MinWidth="300" MaxWidth="500"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <controls:AnatomyDisplay
                        x:Name="_AnatomyDisplay"
                        DataContext="{Binding DisplayVM, Source={StaticResource MainVMLocator}}"/>

                    <controls:IsolatedDisplay x:Name="_IsolatedDisplay" Margin="5" Visibility="Collapsed" Opacity="0"
                                              Closed="_IsolatedDisplay_OnClosed"/>

                    <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="40"
                            CornerRadius="15" Padding="5,0,5,0"
                            Height="30" Background="{StaticResource MaterialDesignGrayBrush}">
                        <StackPanel Orientation="Horizontal">
                            <Button ToolTip="Help" Style="{StaticResource MaterialDesignFlatButton}" Width="30" Padding="0" Foreground="{StaticResource MaterialDesignDarkForeground}" Height="Auto">
                                <materialDesign:PackIcon Kind="HelpCircle" Width="24" Height="24"/>
                            </Button>

                            <materialDesign:PopupBox ToolTip="Settings" Width="30" PlacementMode="TopAndAlignRightEdges" StaysOpen="True">
                                <materialDesign:PopupBox.ToggleContent>
                                    <materialDesign:PackIcon Kind="Settings"  Foreground="{StaticResource MaterialDesignDarkForeground}"  Width="24" Height="24"/>
                                </materialDesign:PopupBox.ToggleContent>
                                <controls:SettingsControl Width="250" Height="400"/>
                            </materialDesign:PopupBox>
                            <Button ToolTip="Maximize/Minimize Isolation View" Style="{StaticResource MaterialDesignFlatButton}" 
                                    Width="30" Padding="0" Foreground="{StaticResource MaterialDesignDarkForeground}" Height="Auto"
                                    Click="_MaximizeIsolationView_OnClick">
                                
                                <materialDesign:PackIcon Kind="OpenInNew" Width="24" Height="24" RenderTransformOrigin="0.5,0.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                            </Button>
                            <Button ToolTip="Fullscreen" Style="{StaticResource MaterialDesignFlatButton}" Width="30" Padding="0" Foreground="{StaticResource MaterialDesignDarkForeground}" Height="Auto">
                                <materialDesign:PackIcon Kind="Fullscreen" Width="24" Height="24"/>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
                <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="5" ShowsPreview="True" ResizeDirection="Columns"/>
                <Grid MinWidth="300" Margin="0,5,0,0"  Grid.Column="1"
                      DataContext="{Binding DisplayVM, Source={StaticResource MainVMLocator}}">
                    <Border HorizontalAlignment="Left" VerticalAlignment="Top" Padding="10"
                            Background="{StaticResource MaterialDesignGrayBrush}"
                            BorderBrush="{StaticResource MaterialDesignDarkBackground}"
                            BorderThickness="0,0,0,2"
                            >
                        <TextBlock Text="Anatomy Explorer"/>
                    </Border>
                    <Grid Margin="0,38,0,0" Background="{StaticResource MaterialDesignGrayBrush}"
                          d:DataContext="{d:DesignInstance {x:Type viewModels:AnatomyDisplayViewModel}}">
                        <ToolBar VerticalAlignment="Top" Background="{x:Null}">
                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}" Margin="5" Padding="3"
                                          Foreground="{StaticResource NeonReddishGradient}" Width="30" Height="30"
                                          ToolTip="Show/Hide Skin"
                                          IsChecked="{Binding ShowSkin}">
                                <Image Source="Assets/Icons/IconSkin.png"/>
                            </ToggleButton>

                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}" Margin="5" Padding="3"
                                          Foreground="{StaticResource NeonReddishGradient}" Width="30" Height="30"
                                          ToolTip="Show/Hide Bones"
                                          IsChecked="{Binding ShowSkeleton}">
                                <Image Source="Assets/Icons/IconBone.png"/>
                            </ToggleButton>

                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}" Margin="5" Padding="3"
                                          ToolTip="Show/Hide Organs"
                                          Foreground="{StaticResource NeonReddishGradient}" Width="30" Height="30">
                                <Image Source="Assets/Icons/IconOrgan.png"/>
                            </ToggleButton>

                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}" Margin="5" Padding="3"
                                          ToolTip="Show/Hide Nerves"
                                          Foreground="{StaticResource NeonReddishGradient}" Width="30" Height="30">
                                <Image Source="Assets/Icons/IconNerve.png"/>
                            </ToggleButton>

                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}" Margin="5" Padding="3"
                                          ToolTip="Show/Hide Veins"
                                          Foreground="{StaticResource NeonReddishGradient}" Width="30" Height="30">
                                <Image Source="Assets/Icons/IconVein.png"/>
                            </ToggleButton>

                        </ToolBar>
                        <TreeView Margin="0,50,0,0" x:Name="AnatomyTree" HorizontalContentAlignment="Stretch"
                                  ItemsSource="{Binding ExplorerVM.Anatomy, Source={StaticResource MainVMLocator}}"
                                  ItemTemplateSelector="{StaticResource ViewSelector}" SelectedItemChanged="AnatomyTree_SelectedItemChanged">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </Grid>

                </Grid>
            </Grid>


        </DockPanel>
    </Grid>
</Window>
